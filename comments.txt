# **************************************************************************** #
#                                                                              #
#                                                         ::::::::             #
#    comments.txt                                       :+:    :+:             #
#                                                      +:+                     #
#    By: abeznik <abeznik@student.codam.nl>           +#+                      #
#                                                    +#+                       #
#    Created: 2021/09/27 12:26:22 by abeznik       #+#    #+#                  #
#    Updated: 2021/09/29 20:16:27 by abeznik       ########   odam.nl          #
#                                                                              #
# **************************************************************************** #

description
	Write a library that contains ft_printf, a function
	that will mimic the real printf

program name
	libftprintf.a

turn in files
	*.c, */*.c, *.h, */*.h, Makefile

Makefile
	all, clean, fclean, re, bonus

external functions
	malloc, free, write, va_start, va_arg, va_copy, va_end

libft authorized

prototype
	int ft_printf(const char *, ...)

conversions
	cspdiuxX%

1	%c  single char								OK
2	%s  string of char							OK
3	%p  void * pointer arg printed in hex		KO
4	%d  decimal (base 10) number				OK
5	%i  integer base 10							OK
6	%u  unsigned decimal (base 10) number		
7	%x  number in hex (base 16) lowercase		OK
8	%X  number in hex (base 16) uppercase		OK
9	%%  percent sign							OK


Arguments to variadic functions (the ones corresponding to 
the ... in the declaration) undergo the default argument promotions.

Integer arguments narrower than int are promoted to int (or to 
unsigned int if the type is unsigned and its maximum value 
exceeds INT_MAX), and arguments of type float are promoted to double.

So you can't get a char from va_arg().